from Crypto.Util.number import *
import gmpy2

def egcd(a, b):
  if (a == 0):
  	return (b, 0, 1)
  else:
  	g, y, x = egcd(b % a, a)
  	return (g, x - (b // a) * y, y)

modulus_list = [143786356117385195355522728814418684024129402954309769186869633376407480449846714776247533950484109173163811708549269029920405450237443197994941951104068001708682945191370596050916441792714228818475059839352105948003874426539429621408867171203559281132589926504992702401428910240117807627890055235377744541913L,
 73988726804584255779346831019194873108586184186524793132656027600961771331094234332693404730437468912329694216269372797532334390363774803642809945268154324370355113538927414351037561899998734391507272602074924837440885467211134022878597523920836541794820777951492188067045604789153534513271406458984968338509L,
 95666403279611361071535593067846981517930129087906362381453835849857496766736720885263927273295086034390557353492037703154353541274448884795437287235560639118986397838850340017834752502157881329960725771502503917735194236743345777337851076649842634506339513864285786698870866229339372558162315435127197444193L,
 119235191922699211973494433973985286182951917872084464216722572875998345005104112625024274855529546680909781406076412741844254205002739352725207590519921992295941563460138887173402493503653397592300336588721082590464192875253265214253650991510709511154297580284525736720396804660126786258245028204861220690641L]

list1 = []
for i in range(len(modulus_list)):
    for j in range(len(modulus_list)):
        if GCD(modulus_list[i], modulus_list[j]) != 1 and i!=j:
            list1.append(GCD(modulus_list[i], modulus_list[j]))
print list1
p = list1[0]
q = modulus_list[0]/p
assert p*q == modulus_list[0]
e = 114194L
phin = (p-1)*(q-1)
print "phin: ", phin

ct = int("0c55bc89e3773d8e378121eced4f9300103a8696bc3f9a1542c5b1539442ca5de03a40ad564ab5c2e764b2f946058ec220abf20afc271896ff4ca1f4a2dd227405f221de51e097d6b9f270c4561cd25596e96efd7de1a0e65d37cbf6a73c62a7e323f48450b9dc75e3e738ec1c7e1ae9fc808da8c476e72aea9155125b815653", 16)
g, a, b = egcd(e, phin)
ct = pow(ct, a, modulus_list[0])
print long_to_bytes(int(gmpy2.iroot(ct, 2)[0]))
