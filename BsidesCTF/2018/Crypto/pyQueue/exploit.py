from Crypto.Cipher import AES
from Crypto.Util.number import *
from string import printable

def split_by(msg,step):
    return [msg[i:i+step] for i in range(0,len(msg),16)]

data = open("ci.pher.text",'rb').read()
MAC,ct = data.split(":")

ct = split_by(ct.decode('hex'),16)

# Calculate key
hope = int(MAC)
for i in ct:
    hope ^= int(i.encode('hex'), 16)
hope = long_to_bytes(hope)

# Brute Joy!!!
key = hope

def brute():
    key = hope
    pt = ""
    for i in range(2,-1,-1):
        key = key[:-1]
        for ch in range(256):
            cipher = AES.new(chr(ch)+key,AES.MODE_ECB)
            recover = cipher.decrypt(ct[i])
            if(all(c in printable for c in recover[:10])):
                pt = recover + pt
                key = chr(ch)+key
                break
    return pt

print brute()
