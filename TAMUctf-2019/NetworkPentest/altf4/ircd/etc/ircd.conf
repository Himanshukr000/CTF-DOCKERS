serverinfo {
    # Identifiers
    sid = "0HA";
    name = "irc.hades.naum";
    description = "Hades IRC server";

    # Network
    network_name = "hades";
    network_desc = "IRC community of only the badest hackers";
    hub = no;

    # Crytography
    rsa_private_key_file = "/usr/ircd/etc/key/irc.hades.naum.key";
    ssl_certificate_file = "/usr/ircd/etc/key/irc.hades.naum.crt";
    ssl_cipher_list = "ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA:AES256-SHA";
    ssl_message_digest_algorithm = "sha256";
};

admin {
    name = "w0rmw00d";
    description = "Dark Lord Supreme";
};

# Class for unprivileged human users.
class {
    name = "guests";
    ping_time = 30 seconds;
    sendq = 64 kbytes;
};

# Class for bots.
class {
    name = "imps";
    ping_time = 30 seconds;
    sendq = 64 kbytes;
};

# Class for privileges (op) human users.
class {
    name = "lords";
    ping_time = 30 seconds;
    sendq = 64 kbytes;
    max_number = 25;
};

listen {
    port = 6667;

    flags = ssl;
    port = 6697;
};

auth {
    user = "~eugene@*";
    class = "lords";

    password = "suckitinnotech";

    flags = need_password, can_flood, no_tilde, resv_exempt;
};

auth {
    user = "*@*";
    class = "imps";

    password = "underling";

    flags = need_password, can_flood, no_tilde;
};

operator {
    name = "baal";
    user = "eugene@*";

    password = "darksecret";
    encrypted = no;

#    ssl_certificate_fingerprint = "4C62287BA6776A89CD4F8FF10A62FFB35E79319F51AF6C62C674984974FCCB1D";
    ssl_connection_required = no;

    class = "lords";

    whois = "is a Dark Lord of Hades";
    /*
    * umodes: the default usermodes opers get when they /oper or /challenge.
    * If defined, it will override oper_umodes settings in general {}.
    * Available user modes:
    *
    * +b - bots         - See bot and drone flooding notices
    * +c - cconn        - Client connection/quit notices
    * +D - deaf         - Don't receive channel messages
    * +d - debug        - See debugging notices
    * +e - external     - See remote server connection and split notices
    * +F - farconnect   - Remote client connection/quit notices
    * +f - full         - See auth {} block full notices
    * +G - softcallerid - Server Side Ignore for users not on your channels
    * +g - callerid     - Server Side Ignore (for privmsgs etc)
    * +H - hidden       - Hides operator status to other users
    * +i - invisible    - Not shown in NAMES or WHO unless you share a channel
    * +j - rej          - See rejected client notices
    * +k - skill        - See server generated KILL messages
    * +l - locops       - See LOCOPS messages
    * +n - nchange      - See client nick changes
    * +p - hidechans    - Hides channel list in WHOIS
    * +q - hideidle     - Hides idle and signon time in WHOIS
    * +R - nononreg     - Only receive private messages from registered clients
    * +s - servnotice   - See general server notices
    * +u - unauth       - See unauthorized client notices
    * +w - wallop       - See server generated WALLOPS
    * +y - spy          - See LINKS, STATS, TRACE notices etc.
    * +z - operwall     - See oper generated WALLOPS
    */
    umodes = locops, servnotice, wallop;

    /*
    * flags: controls the activities and commands an oper is
    * allowed to do on the server. All flags default to 'no'.
    * Available flags:
    *
    * admin          - gives administrator privileges        | ('A' flag)
    * close          - allows CLOSE                          | ('B' flag)
    * connect        - allows local CONNECT                  | ('C' flag)
    * connect:remote - allows remote CONNECT                 | ('D' flag)
    * die            - allows DIE                            | ('E' flag)
    * dline          - allows DLINE                          | ('F' flag)
    * globops        - allows GLOBOPS                        | ('G' flag)
    * join:resv      - allows to JOIN resv {} channels       | ('H' flag)
    * kill           - allows to KILL local clients          | ('I' flag)
    * kill:remote    - allows remote users to be /KILL'd     | ('J' flag)
    * kline          - allows KLINE                          | ('K' flag)
    * locops         - allows LOCOPS                         | ('L' flag)
    * module         - allows MODULE                         | ('M' flag)
    * nick:resv      - allows to use NICK on resv {} nicks   | ('N' flag)
    * opme           - allows OPME                           | ('O' flag)
    * rehash         - allows oper to REHASH config          | ('P' flag)
    * rehash:remote  - allows oper to remotely REHASH config | ('Q' flag)
    * remoteban      - allows remote KLINE/UNKLINE           | ('R' flag)
    * restart        - allows RESTART                        | ('S' flag)
    * resv           - allows RESV                           | ('T' flag)
    * set            - allows SET                            | ('U' flag)
    * squit          - allows local SQUIT                    | ('V' flag)
    * squit:remote   - allows remote SQUIT                   | ('W' flag)
    * undline        - allows UNDLINE                        | ('X' flag)
    * unkline        - allows UNKLINE                        | ('Y' flag)
    * unresv         - allows UNRESV                         | ('Z' flag)
    * unxline        - allows UNXLINE                        | ('a' flag)
    * wallops        - allows WALLOPS                        | ('b' flag)
    * xline          - allows XLINE                          | ('c' flag)
    */
    flags = admin, connect, connect:remote, die, globops, kill, kill:remote,
        kline, module, rehash, restart, set, unkline, unxline, xline, join:resv, nick:resv;
};

channel {
    # Disable non-printable channel names
    disable_fake_channels = yes;

    # KNOCK interval per channel
    knock_delay_channel = 1 minute;

    # Max channels per users
    max_channels = 25;
};

general {
    # Make users invisible on connect
    invisible_on_connect = no;

    # Kill by old nick if changed within 30 seconds
    kill_chase_time_limit = 30 seconds;

    # Disable ident server usage. Because it's a dumb security measure.
    disable_auth = yes;

    # Consider more than 10 messages in a 10 second window to be a flood.
    default_floodcount = 10;
    default_floodtime = 1 second;

    anti_nick_flood = yes;
    max_nick_changes = 5;
    max_nick_time = 20 seconds;

    away_count = 2;
    away_time = 10 seconds;

    failed_oper_notice = yes;

    # Warn if a server is more than 3 seconds out of sync.
    # Drop the connection if more than 15.
    ts_warn_delta = 3 seconds;
    ts_max_delta = 15 seconds;

    # Warn if a server tries to connect without a connect block.
    warn_no_connect_block = yes;

    # stats_u_oper_only: make stats u (uptime) oper only.
    stats_u_oper_only = yes;

    /* no_oper_flood: increase flood limits for opers. */
    no_oper_flood = yes;

    /*
     * user modes configurable: a list of user modes for the options below
     *
     * +b - bots         - See bot and drone flooding notices
     * +c - cconn        - Client connection/quit notices
     * +D - deaf         - Don't receive channel messages
     * +d - debug        - See debugging notices
     * +e - external     - See remote server connection and split notices
     * +F - farconnect   - Remote client connection/quit notices
     * +f - full         - See auth {} block full notices
     * +G - softcallerid - Server Side Ignore for users not on your channels
     * +g - callerid     - Server Side Ignore (for privmsgs etc)
     * +H - hidden       - Hides operator status to other users
     * +i - invisible    - Not shown in NAMES or WHO unless you share a channel
     * +j - rej          - See rejected client notices
     * +k - skill        - See server generated KILL messages
     * +l - locops       - See LOCOPS messages
     * +n - nchange      - See client nick changes
     * +p - hidechans    - Hides channel list in WHOIS
     * +q - hideidle     - Hides idle and signon time in WHOIS
     * +R - nononreg     - Only receive private messages from registered clients
     * +s - servnotice   - See general server notices
     * +u - unauth       - See unauthorized client notices
     * +w - wallop       - See server generated WALLOPS
     * +y - spy          - See LINKS, STATS, TRACE notices etc.
     */

    /* oper_only_umodes: user modes only operators may set. */
    oper_only_umodes = bots, cconn, debug, external, farconnect, full, hidden,
        locops, nchange, rej, skill, spy, unauth;

    /* oper_umodes: default user modes operators get when they successfully OPER. */
    oper_umodes = bots, locops, servnotice, wallop;
};

/*
 * resv block to protect #sanctum
 */
resv {
	mask = "#sanctum";
	reason = "Only lords may enter the sanctum!";
    exempt = "lord*!*@*";
};

resv {
	mask = "lord*";
	reason = "Only the chosen may adopt the title of lord!";
};

/*
 * log {}:  contains information about logfiles.
 */
log {
    /* Do you want to enable logging to ircd.log? */
    use_logging = yes;

    file {
        type = oper;
        name = "/usr/ircd/var/log/ircd-hybrid-oper.log";
        size = 10 megabytes;
    };

    file {
        type = user;
        name = "/usr/ircd/var/log/ircd-hybrid-user.log";
        size = 10 megabytes;
    };

    file {
        type = kill;
        name = "/usr/ircd/var/log/ircd-hybrid-kill.log";
        size = 10 megabytes;
    };

    file {
        type = kline;
        name = "/usr/ircd/var/log/ircd-hybrid-kline.log";
        size = 10 megabytes;
    };

    file {
        type = dline;
        name = "/usr/ircd/var/log/ircd-hybrid-dline.log";
        size = 10 megabytes;
    };

    file {
        type = xline;
        name = "/usr/ircd/var/log/ircd-hybrid-xline.log";
        size = 10 megabytes;
    };

    file {
        type = resv;
        name = "/usr/ircd/var/log/ircd-hybrid-resv.log";
        size = 10 megabytes;
    };

    file {
        type = debug;
        name = "/usr/ircd/var/log/ircd-hybrid-debug.log";
        size = 10 megabytes;
    };
};
