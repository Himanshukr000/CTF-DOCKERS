import socket
import string
from time import sleep
import random
import os
import sys
from binascii import hexlify
from DiffieHellman import DiffieHellman
from base64 import b64encode, b64decode
from AESCipher import AESCipher

TCP_IP = '172.30.0.2'
TCP_PORT = 5005

print("TCP target IP:", TCP_IP)
print("TCP target port:", TCP_PORT)
sys.stdout.flush()

def recvall(sock, n):
# Helper function to recv n bytes or return None if EOF is hit
    data = b''
    while len(data) < n:
        sock.settimeout(20)
        packet = sock.recv(n - len(data))
        
        if not packet:
            print("Timeout")
            return None
        data += packet
    return data


while True:
    try:
#        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock = socket.create_connection((TCP_IP, TCP_PORT), 10)
        a = DiffieHellman()
        msg = b64encode(str(a.publicKey).encode())
        sys.stdout.flush()
        print("Len: ", len(msg))
        sock.sendall(msg)
        m = recvall(sock, 2468)
        msg = b64decode(m)
        print("Alice Pub: ", str(a.publicKey))
        a.genKey(int(msg))
        a.showResults()

        print("Key {}".format(a.key))
        aes = AESCipher(a.key)

        f = open('script.txt')
        count = 0
        for line in f:
            if count % 2 == 0:
                ciphertext = aes.encrypt(line)
                sock.sendall(ciphertext)
                print("Sending: {}".format(line))
            else:
                data = aes.decrypt(sock.recv(4096))
                print("Recvd {}".format(data))
                if data != line:
                    ciphertext = aes.encrypt("Hmmm... That doesn't sound right")
                    sock.sendall(ciphertext)
                    break

            count += 1

        sock.close()
        sys.stdout.flush()

    except Exception as e:
        print(e)
        sys.stdout.flush()
        pass
    sleep(3)
