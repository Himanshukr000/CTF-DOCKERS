from AESCipher import AESCipher
from DiffieHellman import DiffieHellman
from base64 import b64encode, b64decode
import socket
import sys

TCP_IP = '0.0.0.0'
TCP_PORT = 4000
bob_ip = '172.16.0.2'
bob_port = 5005

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind((TCP_IP, TCP_PORT))
server.listen(1)

print("Listening on {}:{}".format(TCP_IP, TCP_PORT))
sys.stdout.flush()


while True:
    try:
        alice, addr = server.accept()

        data = b64decode(alice.recv(4096).decode()) # buffer size is 1024 bytes
        a = DiffieHellman()
        msg = b64encode(str(a.publicKey).encode())
        alice.sendall(msg)
        a.genKey(int(data))

        bob = socket.create_connection((bob_ip, bob_port), 30)
        b = DiffieHellman()
        msg = b64encode(str(b.publicKey).encode())
        bob.sendall(msg)
        msg = b64decode(bob.recv(4096).decode())
        b.genKey(int(msg))
        
        aes_a = AESCipher(a.key)
        aes_b = AESCipher(b.key)

        while True:
            data = aes_a.decrypt(alice.recv(4096))
            print("Alice Message: {}".format(data))

            ciphertext = aes_b.encrypt(data)
            bob.sendall(ciphertext)
            data = aes_b.decrypt(bob.recv(4096))
            print("Bob Message: {}".format(data))
            ciphertext = aes_a.encrypt(data)
            alice.sendall(ciphertext)

        alice.close()
        sys.stdout.flush()

    except Exception as e:
        print(e)
        pass

