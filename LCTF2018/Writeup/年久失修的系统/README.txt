打开题目是一个网站, 有注册, 登录, 设置motto, 修改密码, 发言这五个功能. 

大家首先想到的可能都是发言和设置motto的地方可能有xss, 但是试过了之后就会发现都转义了, 是没有办法xss的.


再回来看, 注册的时候有用户名6~18位的限制, 也暗示着预置admin这个五位的账号有特殊之处, 肯定是想到要想办法登陆上admin这个用户
可以先尝试一下登陆和注册的功能, 但是这里的正则卡得很死, 再加上长度的限制, 很难想到注入的思路, 覆盖也覆盖不掉.

user.php这个页面用一个GET参数userid来标记用户, 如果访问自己的user.php, 页面上会多出来修改密码和设置motto的功能. 我们来试一下提交修改密码请求的时候改一下id, 比如?userid=10006-1, 页面提示了没有权限, 这正是说明userid这个参数在改密码的逻辑当中是有用的, 也说明了id这个参数存在注入, 只不过这个注入点被正则限制得很死, 没有办法直接在这里盲注, 最多改变一下id的取值. 那我们退一步, 能不能通过这个id参数改掉别人的密码呢?

提示没有权限, 很可能是第一步用userid查询校验了登陆态, 然后用userid作为条件去改了数据库里的密码. 事实上也是这样的, 开发同学校验的是SESSION里面的另外一个字段username, 而后用了id去update.

能不能让userid在select的时候符合校验, 在update的时候又成为我们想构造的数值呢, 还要避开正则的过滤.....
是可以的, 要想办法让这个userid这个参数在select的时候产生一些运算把自身的值改变, 到下面的update中变成别的值. 这两次查询是在一次数据库会话中的, 我们可以自己定义一个用户变量, 在一次会话中都有效. 

mysql> select @a:=@a is not null;
+--------------------+
| @a:=@a is not null |
+--------------------+
|                  0 |
+--------------------+
1 row in set (0.00 sec)

mysql> select @a:=@a is not null;
+--------------------+
| @a:=@a is not null |
+--------------------+
|                  1 |
+--------------------+
1 row in set (0.00 sec)

算好你自己的id和admin的id的差
POST /user.php?userid=10094-9921*@a:=@a is not null HTTP/1.1
第一次是10094-0, 第二次是10094-9921

登进去admin之后有个后台, 里面有个orderby注入, 没过滤, 随便注出来就行了






