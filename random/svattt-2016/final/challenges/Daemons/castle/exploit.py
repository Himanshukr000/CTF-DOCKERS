import socket
from struct import pack,unpack
from ctypes import c_int32
import telnetlib
import time,random
import sys

LOCAL = ('localhost',31336)
LOCAL = (sys.argv[1],31330)
# LOCAL = (sys.argv[1],31335)
# LOCAL = ('128.199.133.96',31331)
BUFFER = 4096

# aa
# 46afa30b62deeb8ea94059224dcdad4955cd9ec9cefe3a31
# aabbccddeeff001122334455667788aa
# aabbccddeeff001122334455667788aaaabbccddeeff001122334455667788aaaabbccddeeff001122334455667788aa


def recv_until(s,str,debug=0):
    recv_ = ''
    while not str in recv_:
        tmp = s.recv(BUFFER)
        recv_ += tmp
        if debug:
            print tmp
        continue
    return recv_

for i in range(256):
    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect(LOCAL)


    recv_until(s,'+\n')

    s.send('w\n')
    recv_until(s,':')
    s.send('aa\n')
    s.recv(BUFFER)

    s.send('d\n')
    recv_until(s,':')
    payload = '46afa30b62deeb8ea94059224dcdad4955cd9ec9ceff4a'+chr(i).encode('hex')
    s.send(payload+'\n')
    data = recv_until(s,'numpad=')
    print 'payload:',payload
    print data

    if data and 'numpad=164' in data:
        break
    s.close()



