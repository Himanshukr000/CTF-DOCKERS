#include <iostream>
#include <cstring>

using namespace std;

int h1;
int c1;
int r1;

void banner ()
{
	cout << endl << "             .--``..---.                " << endl;
	cout << "         .````--:ohdmNms/`         " << endl;
	cout << "          -:/+++/-.:smNd+          " << endl;
	cout << "       ```..--:ohmNNdhh.           " << endl;
	cout << "     `-. `.``.-+sosshd.         :. " << endl;
	cout << "   -os--/sosdmmNNMMNy         .+// " << endl;
	cout << "  :h+.+hNNMMMNNNMMNm/      `/yNN.` " << endl;
	cout << " .do/oNNMMMMMmohs+:`    .+hNMMMM-` " << endl;
	cout << " `yohNhNNNMh-           dosNMMMmo- " << endl;
	cout << "  -mN+hMMMy             .smNMNdd/+`" << endl;
	cout << "   yN.hMMh               +NMMNmhds:" << endl;
	cout << "   +N//m+                 .osshyho " << endl;
	cout << "  ..smhh                           " << endl;
	cout << "   ::oNmy-                         " << endl;
	cout << "      .//yhs/:`                    " << endl;
	cout << "          :ymNN/                   " << endl;
	cout << "         .-+shdho.                 " << endl;
	cout << "             `.--..`          " << endl << endl;
}

void CARROT()
{
	printf("\n Yes! My Carrot is here! mmmm ... \n ");
	if( c1 != 0x42495244) {
		printf(" ~(‾▿‾)~   Oh NO! We hate birds :( \n");
		exit(0);
	}
	string s = std::to_string(r1);
	char const * password = s.c_str();
	std::string decode = "\xa8\xbb\xa3\xa3\xac\xa5\xa7\xb9\xbc\x8d\xad\xb9\xb8\xa1\xb3\xbd\x92\xa1\xa1\xbe\x94\x8b\xa2\xab\x91";
	for ( size_t i=0 ; i < decode.length() ; i++ ) {
		decode[i] ^= ~password[i % 9];
		printf("%c",decode[i]);
		}
	if( h1 == 0) exit(0);
	printf("%08x}\n",c1*r1);
}

int main()
{
	int canary = 0x42495244;
	int hole = 0;
	char input[128];
	banner();
	printf( " Where is my carrot?\n > ");
	cin >> input;

	if( hole == 0 ) exit(0);
	h1 = hole;
	c1 = canary;
	r1 = *(&canary+2);
}

// CANARY 0x42495244;
// RET 0x08049570
// fwhibbit{Carrots_for_All_160591c0}
